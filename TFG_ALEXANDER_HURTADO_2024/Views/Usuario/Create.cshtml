@model DB.Models.Usuarios.Usuario

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<header>
    <link rel="stylesheet" type="text/css" href="~/Content/EditarStyle.css" />
</header>

<style>
    .control-label{
        white-space: nowrap;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>PERSONA</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.PERSONA.Catalago_Cedula_IdCatalago_Cedula, "Identificación", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PERSONA.Catalago_Cedula_IdCatalago_Cedula, (SelectList)ViewBag.Catalogo_Cedula, "Seleccione una tipo de cedula", new { @class = "form-control", @id = "Catalago_Cedula_IdCatalago_Cedula", @onchange = "validarCedula();" })
            @Html.ValidationMessageFor(model => model.PERSONA.Catalago_Cedula_IdCatalago_Cedula, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.PERSONA.Cedula, "Cédula", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PERSONA.Cedula, new { htmlAttributes = new { @class = "form-control", id = "cedulaInput", @onchange = "validarCedula();" } })
            @Html.ValidationMessageFor(model => model.PERSONA.Cedula, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PERSONA.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PERSONA.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PERSONA.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PERSONA.Apeliido1, "Primer apellido", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PERSONA.Apeliido1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PERSONA.Apeliido1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PERSONA.Apellido2, "Segundo apellido", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PERSONA.Apellido2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PERSONA.Apellido2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PERSONA.Fecha_Nacimiento, "Fecha de nacimiento", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PERSONA.Fecha_Nacimiento, new { htmlAttributes = new { @class = "form-control", type = "date", max = "2009-12-31" } })
            @Html.ValidationMessageFor(model => model.PERSONA.Fecha_Nacimiento, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.TELEFONO.idTelefono, "Teléfono", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TELEFONO.idTelefono, new { htmlAttributes = new { @class = "form-control", id = "telefonoInput" } })
            @Html.ValidationMessageFor(model => model.TELEFONO.idTelefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DIRECCION.Distrito_Canton_Provincia_idProvincia, "Provincia", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DIRECCION.Distrito_Canton_Provincia_idProvincia, (SelectList)ViewBag.Provincias, "Seleccione una provincia", new { @class = "form-control", @onchange = "CambiarProvincia();", ID= "Distrito_Canton_Provincia_idProvincia" })
            @Html.ValidationMessageFor(model => model.DIRECCION.Distrito_Canton_Provincia_idProvincia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DIRECCION.Distrito_Canton_idCanton, "Cantón", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DIRECCION.Distrito_Canton_idCanton, (SelectList)ViewBag.Cantones, "Seleccione un cantón", new { @class = "form-control", @onchange = "CambiarCanton();", ID = "Distrito_Canton_idCanton" })
            @Html.ValidationMessageFor(model => model.DIRECCION.Distrito_Canton_idCanton, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DIRECCION.Distrito_idDistrito, "Distrito", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DIRECCION.Distrito_idDistrito, (SelectList)ViewBag.Distritos, "Seleccione un distrito", new { @class = "form-control", @ID = "Distrito_idDistrito" })
            @Html.ValidationMessageFor(model => model.DIRECCION.Distrito_idDistrito, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DIRECCION.Otras_sennas, "Otras señas", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DIRECCION.Otras_sennas, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DIRECCION.Otras_sennas, "", new { @class = "text-danger" })
        </div>
    </div>

    <h4>EMPLEADO</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.EMPLEADO.Fecha_Ingreso, "Fecha de ingreso", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.EMPLEADO.Fecha_Ingreso, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(model => model.EMPLEADO.Fecha_Ingreso, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EMPLEADO.Salario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EMPLEADO.Salario, new { htmlAttributes = new { @class = "form-control", type = "number" } })
            @Html.ValidationMessageFor(model => model.EMPLEADO.Salario, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Añade aquí los campos correspondientes a la clase EMPLEADO -->

    <h4>USUARIO</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.USUARIO.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.USUARIO.Correo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.USUARIO.Correo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EMPLEADO.Jefatura_Id_Empleado, "Tipo de usuario", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="Jefatura_Id_Empleado" name="EMPLEADO.Jefatura_Id_Empleado" class="form-control">
                <option value="1">Administrador</option>
                <option value="2">Empleado</option>
            </select>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear" class="btn btn-default" />
            @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-danger" })
        </div>
    </div>

</div>
}




<script>
    document.addEventListener("DOMContentLoaded", function () {
        var telefonoInput = document.getElementById("telefonoInput");

        telefonoInput.addEventListener("input", function () {
            // Removemos todos los caracteres que no sean números
            telefonoInput.value = telefonoInput.value.replace(/\D/g, '');

            // Validamos la longitud
            if (telefonoInput.value.length > 8) {
                telefonoInput.value = telefonoInput.value.slice(0, 8);
            }
        });
    });

    function validarLongitud() {
        var catalogoCedula = document.getElementById("Catalago_Cedula_IdCatalago_Cedula");
        var cedulaInput = document.getElementById("cedulaInput");

        // Obtener el valor seleccionado del catálogo
        var valorCatalogo = catalogoCedula.value;

        // Establecer la longitud máxima de acuerdo al valor del catálogo
        var longitudMaxima = 9; // Valor por defecto

        if (valorCatalogo === "Seleccione una tipo de cedula") {
            cedulaInput.value = "";
            cedulaInput.setAttribute("disabled", "disabled");
            return;
        }

        if (valorCatalogo === "1") {
            longitudMaxima = 9;
        } else if (valorCatalogo === "2") {
            longitudMaxima = 12;
        }

        // Habilitar el campo de cédula si se selecciona un tipo de cédula válido
        cedulaInput.removeAttribute("disabled");

        // Remover todos los caracteres que no sean números
        cedulaInput.value = cedulaInput.value.replace(/\D/g, '');

        // Validar longitud máxima
        if (cedulaInput.value.length > longitudMaxima) {
            cedulaInput.value = cedulaInput.value.slice(0, longitudMaxima);
        }
    }

    function validarCedula() {
        var cedulaInput = document.getElementById("cedulaInput");

        // Remover el evento input anterior, si existe
        cedulaInput.removeEventListener("input", validarLongitud);

        // Agregar el nuevo evento input
        cedulaInput.addEventListener("input", validarLongitud);

        // Llamar a validarLongitud() al inicio para manejar el estado inicial del campo de cédula
        validarLongitud();
    }





    function CambiarCanton() {
        var idCanton = $("#Distrito_Canton_idCanton").val();

        $.ajax({
            url: "@Url.Action("CambiarCanton", "Usuario")",
            type: "POST",
            data: { IdCanton: idCanton },
            success: function (result) {
                $("#Distrito_idDistrito").empty(); // Vacía el dropdown de Distritos
                $.each(result, function (index, item) {
                    $("#Distrito_idDistrito").append($('<option>', {
                        value: item.Value,
                        text: item.Text
                    }));
                });
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }

    function CambiarProvincia() {
        var idProvincia = $("#Distrito_Canton_Provincia_idProvincia").val();

        $.ajax({
            url: "@Url.Action("CambiarProvincia", "Usuario")",
            type: "POST",
            data: { idProvincia: idProvincia },
            success: function (result) {
                $("#Distrito_Canton_idCanton").empty(); // Vacía el dropdown de Cantones
                $("#Distrito_idDistrito").empty(); // Vacía el dropdown de Distritos
                $.each(result, function (index, item) {
                    $("#Distrito_Canton_idCanton").append($('<option>', {
                        value: item.Value,
                        text: item.Text
                    }));
                });
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }

</script>

